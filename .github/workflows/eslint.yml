name: ESLint
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '44 1 * * 5'

jobs:
  eslint:
    name: Run ESLint scanning
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Create package.json if not exists
        run: |
          if [ ! -f package.json ]; then
            echo '{"name":"eslint-check","version":"1.0.0"}' > package.json
          fi

      - name: Install dependencies
        run: |
          npm install eslint@8.57.0
          npm install @microsoft/eslint-formatter-sarif@3.1.0
          npm install @typescript-eslint/parser@6.21.0
          npm install @typescript-eslint/eslint-plugin@6.21.0
          npm install eslint-plugin-check-file@2.8.0

      - name: Verify ESLint installation
        run: |
          npx eslint --version
          ls -la node_modules/.bin/eslint

      - name: Run ESLint (Strict - Fails on errors)
        run: |
          FILES=$(find . -maxdepth 1 -type f \( -name "*.js" -o -name "*.ts" -o -name "*.jsx" -o -name "*.tsx" \) 2>/dev/null || true)
          if [ -n "$FILES" ]; then
            echo "Linting files in root directory..."
            ./node_modules/.bin/eslint . \
              --config .eslintrc.json \
              --ext .js,.jsx,.ts,.tsx \
              --max-warnings 0
          else
            echo "No JS/TS files found in root directory"
            exit 1
          fi

      - name: Run ESLint for SARIF report
        if: always()
        run: |
          FILES=$(find . -maxdepth 1 -type f \( -name "*.js" -o -name "*.ts" -o -name "*.jsx" -o -name "*.tsx" \) 2>/dev/null || true)
          if [ -n "$FILES" ]; then
            ./node_modules/.bin/eslint . \
              --config .eslintrc.json \
              --ext .js,.jsx,.ts,.tsx \
              --format @microsoft/eslint-formatter-sarif \
              --output-file eslint-results.sarif || true
            echo "sarif_exists=true" >> $GITHUB_OUTPUT
          else
            echo "sarif_exists=false" >> $GITHUB_OUTPUT
          fi
        continue-on-error: true
        id: run_eslint_sarif

      - name: Upload analysis results to GitHub
        if: steps.run_eslint_sarif.outputs.sarif_exists == 'true'
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ./eslint-results.sarif
          wait-for-processing: true
